{
  "name": "clobber",
  "license": "GPL-3.0",
  "description": "File system and globbing utilities",
  "repository": {
    "type": "git",
    "url": "git://github.com/cgkineo/buildkit-treeglob.git"
  },
  "version": "0.1.11",
  "dependencies": {
    "osenv": "~0.1.3",
    "minimatch": "~3.0.0",
    "path": "~0.12.7",
    "handlebars": "~4.0.5"
  },
  "readme": "#buildkit-treeglob\r\nBuildkit file globbing utility\r\n\r\n## What Does It Do?\r\nReturns arrays of file and directory properties according to globs and a tree.\r\nPerforms file and directory change watching according to globs and a tree.\r\n\r\n## Use\r\na. Install buildkit-globber\r\n```\r\nnpm install --save buildkit-globber\r\n```\r\nb. Require\r\n```\r\n//node v4\r\nvar GlobCollection = require(\"buildkit-globber\").GlobCollection;\r\nvar TreeContext = require(\"buildkit-globber\").TreeContext;\r\nvar WatchCollection = require(\"buildkit-globber\").WatchCollection;\r\nvar FileSystem = require(\"buildkit-globber\").FileSystem;\r\nvar Location = require(\"buildkit-globber\").Location;\r\nvar MATCH_TYPE = require(\"buildkit-globber\").MATCH_TYPE;\r\n\r\n\r\n//node v5+\r\nvar {GlobCollection,\r\n\tTreeContext,\r\n\tTree,\r\n\tWatchCollection,\r\n\tLocation,\r\n\tFileSystem,\r\n\tMATCH_TYPE} = require(\"buildkit-globber\");\r\n```\r\nc. Use API.\r\nSee below.\r\n\r\n\r\n## Glob\r\nA description of the files / directories expected.\r\n\r\n```\r\n\"*/*/*.js\" // all javascript files, two directories into the tree\r\n\"*/**/*.js\" // all javascript files, one directory and above in the tree\r\n\"src/*/js/**/*.js\" // all of javascript files in the subfolders of the 'js' folder located in each of the \"src\" folder's sub directories.\r\n\"!**/.*\" // not all nested hidden files\r\n\"!node_modules\" // not the immediate node_modules folder\r\n\"!**/node_modules\" // no any sub node_modules folder\r\n\r\nvar globs = new GlobCollection([\r\n\t\"src/*/js/*.js\",\r\n\t\"src/*/js/**/*.js\",\r\n\t\"!**/.*\"\r\n]);\r\n\r\nvar ignores = new GlobCollection([\r\n\t\"!node_modules\",\r\n\t\"!**/node_modules\"\r\n]);\r\n\r\n```\r\n\r\n##Tree Context\r\nAn collection of options for a group of Tree objects.\r\n```\r\nvar treecontext = new TreeContext({\r\n\tfiles: true,\r\n\tdirs: true,\r\n\tcache: true\r\n});\r\n\r\ntreecontext.clearCache();\r\n\r\n```\r\n\r\n\r\n## Tree\r\nA directory \".\" relative to another directory \"/home/user/Destkop\".\r\n\r\n```\r\nvar tree = treecontext.Tree(\".\",\"/working/project_number\");\r\n\r\ntree.populate();\r\n\r\ntree.dirs;\r\ntree.files;\r\ntree.subtrees;\r\ntree.TreeContext;\r\n\r\n```\r\nAlternatively, without a treecontext\r\n```\r\nvar tree = new Tree(\".\",\"/working/project_number\");\r\n\r\ntree.populate();\r\n\r\ntree.dirs;\r\ntree.files;\r\ntree.subtrees;\r\ntree.TreeContext;\r\n\r\n```\r\n\r\n\r\n## Glob + Tree Together\r\n```\r\n\t\r\n\t//fetch all files + dirs in tree by globs:\r\n\tvar locationObjects = tree.mapGlobs(globs, ignores);\r\n\r\n\tlocationObjects.files[0-x].relativeLocation;\r\n\tlocationObjects.files[0-x].ctime;\r\n\tlocationObjects.files[0-x].mtime;\r\n\tlocationObjects.files[0-x].size;\r\n\tlocationObjects.files[0-x].isFile;\r\n\tlocationObjects.files[0-x].isDir;\r\n\tlocationObjects.files[0-x].basename;\r\n\tlocationObjects.files[0-x].extname;\r\n\tlocationObjects.files[0-x].filename;\r\n\tlocationObjects.files[0-x].dirname;\r\n\tlocationObjects.files[0-x].depth;\r\n\tlocationObjects.files[0-x].location;\r\n\tlocationObjects.files[0-x].relativeTo;\r\n\r\n\tlocationObjects.dirs[0-x].relativeLocation;\r\n\tlocationObjects.dirs[0-x].ctime;\r\n\tlocationObjects.dirs[0-x].mtime;\r\n\tlocationObjects.dirs[0-x].size;\r\n\tlocationObjects.dirs[0-x].isFile;\r\n\tlocationObjects.dirs[0-x].isDir;\r\n\tlocationObjects.dirs[0-x].basename;\r\n\tlocationObjects.dirs[0-x].extname;\r\n\tlocationObjects.dirs[0-x].filename;\r\n\tlocationObjects.dirs[0-x].dirname;\r\n\tlocationObjects.dirs[0-x].depth;\r\n\tlocationObjects.dirs[0-x].location;\r\n\tlocationObjects.dirs[0-x].relativeTo;\r\n\r\n\r\n\r\n\t//watch all files + dirs in tree by globs:\r\n\tvar watchObject = tree.watchGlobs(globs, ignores);\r\n\twatchObject.on(\"change\", function(tree, files, dirs) {\r\n\r\n\t\tfiles[0-x].location.ctime;\r\n\t\tfiles[0-x].change = \"updated/deleted/created\";\r\n\r\n\t});\r\n\twatchObject.start();\r\n\twatchObject.stop();\r\n\twatchObject.start();\r\n\r\n\r\n```\r\n\r\n## Location Object\r\n```\r\n\r\n\tvar location = new Location(\"src\", \".\");\r\n\tlocation.populate({cache: true});\r\n\r\n\tlocation.doesExist;\r\n\tlocation.isFile;\r\n\tlocation.isDir;\r\n\tlocation._isPopulated;\r\n\tlocation._populatedTimeStamp;\r\n\tlocation.depth;\r\n\tlocation.dirname;\r\n\tlocation.filename;\r\n\tlocation.extname;\r\n\tlocation.basename;\r\n\tlocation.relativeLocation;\r\n\tlocation.location;\r\n\tlocation.relativeTo;\r\n\tlocation.birthtime;\r\n\tlocation.ctime;\r\n\tlocation.mtime;\r\n\tlocation.size;\r\n\tlocation.clone();\r\n\tlocation.populate();\r\n\r\n\r\n\r\n\tLocation.toAbsolute(string location, [string relativeTo]);\r\n\tLocation.toRelative(string location, [string relativeTo]);\r\n\tLocation.cwd();\r\n\tLocation.home();\r\n\tLocation.contextReplace(string handlebars, object context);\r\n\tLocation.convertToPosixSlashes(string location);\r\n\r\n```\r\n\r\n##Watch Collection Object\r\n```\r\n\tvar watches = new WatchCollection();\r\n\r\n\twatches.push(watchObject);\r\n\r\n\twatches.start();\r\n\twatches.stop();\r\n\twatches.start();\r\n\r\n```\r\n\r\n##MATCH_TYPE\r\n```\r\n\r\n\tMATCH_TYPE.NOTMATCHED = 0;\r\n\tMATCH_TYPE.NOTMATCHED.toString() = \"NOTMATCHED\";\r\n\tMATCH_TYPE.DESCEND = 1;\r\n\tMATCH_TYPE.DESCEND.toString() = \"DESCEND\";\r\n\tMATCH_TYPE.NOTEXCLUDED = 2;\r\n\tMATCH_TYPE.NOTEXCLUDED.toString() = \"NOTEXCLUDED\";\r\n\tMATCH_TYPE.MATCHED = 3;\r\n\tMATCH_TYPE.MATCHED.toString() = \"MATCHED\";\r\n\tMATCH_TYPE.MATCHED_DESCEND = 4;\r\n\tMATCH_TYPE.MATCHED_DESCEND.toString() = \"MATCHED_DESCEND\";\r\n\r\n```\r\n\r\n##FileSystem Object\r\n```\r\n\r\n\tFileSystem.collate(string from, string to, string at, Array copyGlobs, Array destGlobs, function callback);\r\n\tFileSystem.copy(string from, string to, Array copyGlobs, function callback);\r\n\tFileSystem.mkdir(string dest);\r\n\tFileSystem.remove(string dest, Array removeGlobs);\r\n\tFileSystem.rm(string path);\r\n\r\n\r\n\r\n```",
  "readmeFilename": "README.md",
  "gitHead": "4c072d649ee49b4b32484cf33e435bda5fc75ca8",
  "bugs": {
    "url": "https://github.com/cgkineo/buildkit-treeglob/issues"
  },
  "homepage": "https://github.com/cgkineo/buildkit-treeglob#readme",
  "_id": "buildkit-globber@0.1.3",
  "scripts": {},
  "_shasum": "a9f3e5a162c1ee1ff7ab3dc73be25f1baa14f8c6",
  "_from": "buildkit-globber@>=0.1.1 <0.2.0"
}
